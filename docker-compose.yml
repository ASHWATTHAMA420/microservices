version: "3.9"

services:

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - security

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - security

  database:
    container_name: database
    image: mysql
    restart: always
    environment:
      MYSQL_USER: "raj"
      MYSQL_PASSWORD: "pass"
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost -u root -p pass" ]
      interval: 20s
      timeout: 10s
      retries: 5
    volumes:
      - ./docker:/docker-entrypoint-initdb.d
    networks:
      - security

  eurekaserver:
    image: eurekaserver:latest
    build:
      context: ./eurekaserver
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_APPLICATION_NAME=eurekaserver
      - EUREKA_INSTANCE_HOSTNAME=localhost
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - SERVER_PORT=8761
    networks:
      - security

  apigateway:
    image: apigateway:latest
    build:
      context: ./apigateway
      dockerfile: Dockerfile
    ports:
      - "1110:1110"
    environment:
      - SPRING_APPLICATION_NAME=apigateway
      - EUREKA_SERVICE_URL=http://eurekaserver:8761/eureka/
    depends_on:
      eurekaserver:
        condition: service_started
    networks:
      - security

  productservice:
    image: productservice:latest
    build:
      context: ./productservice
      dockerfile: Dockerfile
    ports:
      - "1111:1111"
    environment:
      - server.port=1111
      - SPRING_APPLICATION_NAME=productservice
      - EUREKA_SERVICE_URL=http://eurekaserver:8761/eureka/
      - SECURITY_DB_IP=database
      - SECURITY_DB_PORT=3306
      - spring.datasource.url=jdbc:mysql://localhost:3306/product
      - spring.datasource.username=raj
      - spring.datasource.password=pass
    depends_on:
      database:
        condition: service_healthy
      eurekaserver:
        condition: service_started
    networks:
      - security

  authservice:
    image: authservice:latest
    build:
      context: ./authservice
      dockerfile: Dockerfile
    ports:
      - "1112:1112"
    environment:
      - server.port=1112
      - SPRING_APPLICATION_NAME=authservice
      - EUREKA_SERVICE_URL=http://eurekaserver:8761/eureka/
    depends_on:
      eurekaserver:
        condition: service_started
    networks:
      - security

  userservice:
    image: userservice:latest
    build:
      context: ./userservice
      dockerfile: Dockerfile
    ports:
      - "1113:1113"
    environment:
      - server.port=1113
      - SPRING_APPLICATION_NAME=userservice
      - EUREKA_SERVICE_URL=http://eurekaserver:8761/eureka/
      - spring.datasource.url=jdbc:mysql://localhost:3306/user
      - spring.datasource.username=raj
      - spring.datasource.password=pass
    depends_on:
      database:
        condition: service_healthy
      eurekaserver:
        condition: service_started
    networks:
      - security

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - security

networks:
  security:
    driver: bridge